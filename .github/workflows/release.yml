name: Release Bump TUI

on:
  push:
    tags:
      - 'v*'  # Runs only when a tag like "v1.2.3" is pushed

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            extension: ""
          - os: darwin
            arch: amd64
            extension: ""
          - os: darwin
            arch: arm64
            extension: ""
          - os: windows
            arch: amd64
            extension: ".exe"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Just
        uses: extractions/setup-just@v1

      - name: Build Binary
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          LDFLAGS="-X main.version=$VERSION -X main.commit=$COMMIT -X main.date=$DATE"
          
          mkdir -p build
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags "$LDFLAGS" -o build/bump-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }} .
          
          # Create tarball
          cd build
          tar -czf "bump-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" bump-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bump-${{ matrix.os }}-${{ matrix.arch }}
          path: build/bump-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-assets/bump-linux-amd64/bump-linux-amd64.tar.gz
            release-assets/bump-darwin-amd64/bump-darwin-amd64.tar.gz
            release-assets/bump-darwin-arm64/bump-darwin-arm64.tar.gz
            release-assets/bump-windows-amd64/bump-windows-amd64.tar.gz
          generate_release_notes: true

  update-homebrew:
    name: Update Homebrew Tap
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: mattresspadley

      - name: Get version without 'v' prefix
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Checkout the tap repository
        uses: actions/checkout@v4
        with:
          repository: mattresspadley/homebrew-tap
          token: ${{ steps.generate_token.outputs.token }}

      - name: Download release binaries and get checksums
        run: |
          # Download macOS Intel binary for Homebrew (most common)
          wget https://github.com/MattressPadley/bump/releases/download/${{ github.ref_name }}/bump-darwin-amd64.tar.gz
          echo "SHA256_AMD64=$(shasum -a 256 bump-darwin-amd64.tar.gz | awk '{ print $1 }')" >> $GITHUB_OUTPUT
          
          # Download macOS ARM binary for Apple Silicon
          wget https://github.com/MattressPadley/bump/releases/download/${{ github.ref_name }}/bump-darwin-arm64.tar.gz
          echo "SHA256_ARM64=$(shasum -a 256 bump-darwin-arm64.tar.gz | awk '{ print $1 }')" >> $GITHUB_OUTPUT
        id: checksums

      - name: Update the formula
        run: |
          # Update the formula to support both Intel and Apple Silicon
          cat > Formula/bump.rb << 'EOF'
          class Bump < Formula
            desc "Interactive TUI for semantic versioning and changelog generation"
            homepage "https://github.com/MattressPadley/bump"
            version "${{ steps.version.outputs.VERSION }}"
            license "MIT"

            if Hardware::CPU.intel?
              url "https://github.com/MattressPadley/bump/releases/download/${{ github.ref_name }}/bump-darwin-amd64.tar.gz"
              sha256 "${{ steps.checksums.outputs.SHA256_AMD64 }}"
            else
              url "https://github.com/MattressPadley/bump/releases/download/${{ github.ref_name }}/bump-darwin-arm64.tar.gz"
              sha256 "${{ steps.checksums.outputs.SHA256_ARM64 }}"
            end

            def install
              if Hardware::CPU.intel?
                bin.install "bump-darwin-amd64" => "bump"
              else
                bin.install "bump-darwin-arm64" => "bump"
              end
            end

            test do
              assert_match version.to_s, shell_output("#{bin}/bump -version")
            end
          end
          EOF

      - name: Commit and push the update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/bump.rb
          git commit -m "Update bump to version ${{ steps.version.outputs.VERSION }}"
          git push